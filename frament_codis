used代表redis使用jemalloc分配的内存，rss代表了进程当前占用的内存（可以看做jemalloc实际分配了多少内存）。rss/used可以作为衡量碎片的指标，越大说明碎片越严重。

可以看到随着value不断增大，redis需要分配的内存线性增长。rss的增长比used更快，因此内存碎片的问题的确存在，rss/used甚至一度超过了2.0（440字节时达到最高值为2.06），这意味着redis每用1GB内存都需要额外多付出1GB。顶峰过后，rss/used下降到了1.6左右。如果我们重启redis，碎片将不再存在。

一个值得注意的问题是，redis使用的内存比实际的数据量多很多。比如第一阶段后，有效数据应为120MB，但redis却分配了525.4MB的内存。其它阶段也有类似现象。具体原因还不清楚，但我感觉有点多。因此除了jemalloc存在的碎片问题，redis本身是否在使用内存时过于土豪？
